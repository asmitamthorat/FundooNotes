// <auto-generated />
using System;
using FundooRepositoryLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FundooRepositoryLayer.Migrations
{
    [DbContext(typeof(FundooDBContext))]
    partial class FundooDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FundooModelLayer.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("BigInt");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FundooModelLayer.Collaborator", b =>
                {
                    b.Property<int>("CollaboratorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NoteId");

                    b.Property<string>("RecieverEmail");

                    b.Property<string>("SenderEmail");

                    b.HasKey("CollaboratorId");

                    b.HasIndex("NoteId");

                    b.ToTable("Collaborator");
                });

            modelBuilder.Entity("FundooModelLayer.Lable", b =>
                {
                    b.Property<int>("LableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lables");

                    b.Property<int>("NoteId");

                    b.HasKey("LableId");

                    b.HasIndex("NoteId");

                    b.ToTable("Lable");
                });

            modelBuilder.Entity("FundooModelLayer.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<bool>("IsPin");

                    b.Property<DateTime?>("Remainder");

                    b.Property<string>("Title");

                    b.HasKey("NoteId");

                    b.HasIndex("AccountId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("FundooModelLayer.Collaborator", b =>
                {
                    b.HasOne("FundooModelLayer.Note", "Note")
                        .WithMany("Collaborator")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FundooModelLayer.Lable", b =>
                {
                    b.HasOne("FundooModelLayer.Note", "Note")
                        .WithMany("Lable")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FundooModelLayer.Note", b =>
                {
                    b.HasOne("FundooModelLayer.Account", "Account")
                        .WithMany("Note")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
